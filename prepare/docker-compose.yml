version: "3.5"
services:
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    user: root
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami/kafka"
    environment:
      KAFKA_ENABLE_KRAFT: yes # 允许使用kraft，即Kafka替代Zookeeper
      KAFKA_CFG_PROCESS_ROLES: broker,controller # kafka角色，做broker，也要做controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER # 指定供外部使用的控制类请求信息
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093 # 定义kafka服务端socket监听端口
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT # 定义安全协议
      KAFKA_KRAFT_CLUSTER_ID: LelM2dIFQkiUFvXCEcqRWA # 使用Kafka时的集群id，集群内的Kafka都要用这个id做初始化，生成一个UUID即可
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093 # 集群地址
      ALLOW_PLAINTEXT_LISTENER: yes # 允许使用PLAINTEXT监听器，默认false，不建议在生产环境使用
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M # 设置broker最大内存，和初始内存
      #KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false # 禁止自动创建主题
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092 # 定义外网访问地址（宿主机ip地址和端口）
      KAFKA_BROKER_ID: 1 # broker.id，必须唯一
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9090:9090"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

#    volumes:
#      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
  redis:
    image: redis
    container_name: redis
    command: redis-server # --requirepass 123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    # 设置编码
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # 数据卷
    volumes:
      - ./data:/var/lib/mysql
    # root 的密码, 不过貌似没有生效 不要紧 手动设置也可
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai # 校正时区
      MYSQL_DATABASE: service-hello nacos
      LANG: C.UTF-8

volumes:
  kafka_data:
    driver: local
  redis_data:
    driver: local